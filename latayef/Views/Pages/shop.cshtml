@{
    Layout = "~/Views/Shared/_General.cshtml";
}
@model Ecommerce_Project.ViewModels.ProductCategoryViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Vegefoods - Free Bootstrap 4 Template by Colorlib</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">


</head>
<body class="goto-here">

    <!-- div and nav in general -->

    <div class="hero-wrap hero-bread" style="background-image: url('@Url.Content("~/images/IMG-20241105-WA0049.jpg")'); object-fit:cover">
        <div class="container">
            <div class="row no-gutters slider-text align-items-center justify-content-center">
                <div class="col-md-9 ftco-animate text-center">
                    <p class="breadcrumbs"><span class="mr-2"><a href="@Url.Action("Index", "Pages")">Home</a></span> <span>Products</span></p>
                    <h1 class="mb-0 bread">Products</h1>
                </div>
            </div>
        </div>
    </div>

    <section class="ftco-section">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-10 mb-5 text-center">
                    <ul class="product-category">
                        <li><a href="#" class="category-filter" data-category-id="0">All</a></li>
                        @foreach (var category in Model.Categories)
                        {
                            <li><a href="#" class="category-filter" data-category-id="@category.Id">@category.Name</a></li>
                        }
                    </ul>
                </div>
            </div>
            <div class="row">
                <!-- Product List Container -->
                <div id="product-list">
                    @await Html.PartialAsync("~/Views/Shared/_ProductListPartial.cshtml", Model.Products)

                </div>
            </div>
            <div class="row mt-5">
                <div class="col text-center">
                    <div class="block-27">
                        <ul>
                            <li><a href="#">&lt;</a></li>
                            <li class="active"><span>1</span></li>
                            <li><a href="#">2</a></li>
                            <li><a href="#">3</a></li>
                            <li><a href="#">&gt;</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px"><circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" /><circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const categoryLinks = document.querySelectorAll('.category-filter');

            categoryLinks.forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    const categoryId = this.getAttribute('data-category-id');
                    console.log("Category ID clicked:", categoryId); // Log the category ID
                    fetchProducts(categoryId);
                });
            });

            function fetchProducts(categoryId) {
                console.log("Fetching products for category ID:", categoryId); // Log before making the request
                fetch(`/Products/FilterByCategory?categoryId=${categoryId}`)
                    .then(response => {
                        if (!response.ok) {
                            console.error(`HTTP error! Status: ${response.status}`);
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.text();
                    })
                    .then(html => {
                        console.log("HTML received:", html); // Log received HTML content
                        document.getElementById('product-list').innerHTML = html;
                    })
                    .catch(error => {
                        console.error('Error loading products:', error);
                        document.getElementById('product-list').innerHTML = '<p>Error loading products. Please try again later.</p>';
                    });
            }
        });



    </script>
</body>
</html>